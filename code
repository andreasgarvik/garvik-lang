// "Closure"
// a = 5
// fun = x -> x + a
// a = 6
// fun(5) 

// "Fibonacci"
// fib = x -> if x == 0 then 0 else if x == 1 then 1 else fib(x-1) + fib(x-2)
// fib(10)

// "Functions"
// f = x -> x(2)
// f(x -> x * 2)

// "Lists"
// l = [1,2,3]
// l[1]

// "Structs"
// s = { a = 5 }
// s.a

f = x -> x.b - x.a
s = {
  a = 2
  b = 3
}
f(s)

// x = [1,2,3,4,5]
// f = a -> a[0]
// f(x)
